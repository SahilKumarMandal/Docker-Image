# Name of the workflow as it appears in the GitHub Actions tab
name: CI/CD for Dockerized Flask App

# Run this workflow on push or pull request events targeting the main branch
on:
  push:
    branches: [ main ]  # Trigger when code is pushed to the main branch
  pull_request:
    branches: [ main ]  # Trigger when a pull request is made to the main branch

jobs:
  # First job: Build the Docker image from the Dockerfile
  dockerbuild:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      # Step 1: Check out the repository code
      - uses: actions/checkout@v4

      # Step 2: Build a Docker image using DockerFile in the root directory
      - name: Build The Docker Image
        run: docker build . --file DockerFile --tag workflow-test:$(date +%s)
        # Tag includes the current timestamp to ensure uniqueness

  # Second job: Build and test the Flask application
  build-and-test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.9
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrade pip
          pip install flask                   # Install Flask
          pip install pytest                  # Install pytest for testing

      # Step 4: Run unit tests using pytest
      - name: Run tests
        run: |
          pytest

  # Third job: Build and publish the Docker image to DockerHub
  build-and-publish:
    needs: build-and-test  # Only run this job if 'build-and-test' succeeds
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (needed for advanced Docker builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to DockerHub using stored secrets
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image to DockerHub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .                           # Use the root directory as context
          file: ./DockerFile                   # Use the DockerFile in the root directory
          push: true                           # Push the image to DockerHub
          tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest  # Tag the image

      # Step 5: Print the image digest (unique identifier of the pushed image)
      - name: Image digest
        run: echo ${{ steps.build-and-publish.outputs.digest }}
